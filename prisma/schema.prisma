// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  brand       String
  category    String
  description String
  ecoRating   Float
  imageUrl    String
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  posts     Post[]
  tips      Tip[]
  likes     Like[]
  comments  Comment[]
  shares    Share[]
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
}

model Tip {
  id         String    @id @default(uuid())
  userId     String
  content    String?
  videoUrl   String?
  createdAt  DateTime  @default(now())
  user       User      @relation(fields: [userId], references: [id])
  likes      Like[]
  comments   Comment[]
  shares     Share[]
}

model Like {
  id        String    @id @default(uuid())
  userId    String
  tipId     String
  tip       Tip       @relation(fields: [tipId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
}

model Comment {
  id        String    @id @default(uuid())
  userId    String
  tipId     String
  content   String
  tip       Tip       @relation(fields: [tipId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
}

model Share {
  id        String    @id @default(uuid())
  userId    String
  tipId     String
  tip       Tip       @relation(fields: [tipId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
}
